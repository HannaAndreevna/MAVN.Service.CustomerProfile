// <auto-generated />
using System;
using Lykke.Service.CustomerProfile.MsSqlRepositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lykke.Service.CustomerProfile.MsSqlRepositories.Migrations
{
    [DbContext(typeof(CustomerProfileContext))]
    [Migration("20190819063603_Tier")]
    partial class Tier
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("customer_profile")
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lykke.Service.CustomerProfile.MsSqlRepositories.Entities.CustomerProfileArchiveEntity", b =>
                {
                    b.Property<string>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("customer_id");

                    b.Property<int?>("CountryOfResidenceId")
                        .HasColumnName("country_of_residence_id");

                    b.Property<int?>("CountryPhoneCodeId")
                        .HasColumnName("country_phone_code_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnName("email_verified");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("Registered")
                        .HasColumnName("registered_at");

                    b.Property<string>("ShortPhoneNumber")
                        .HasColumnName("short_phone_number");

                    b.Property<string>("TierId")
                        .HasColumnName("tier_id");

                    b.HasKey("CustomerId");

                    b.HasIndex("Email");

                    b.ToTable("customer_profile_archive");
                });

            modelBuilder.Entity("Lykke.Service.CustomerProfile.MsSqlRepositories.Entities.CustomerProfileEntity", b =>
                {
                    b.Property<string>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("customer_id");

                    b.Property<int?>("CountryOfResidenceId")
                        .HasColumnName("country_of_residence_id");

                    b.Property<int?>("CountryPhoneCodeId")
                        .HasColumnName("country_phone_code_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnName("email_verified");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("Registered")
                        .HasColumnName("registered_at");

                    b.Property<string>("ShortPhoneNumber")
                        .HasColumnName("short_phone_number");

                    b.Property<string>("TierId")
                        .HasColumnName("tier_id");

                    b.HasKey("CustomerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("customer_profile");
                });

            modelBuilder.Entity("Lykke.Service.CustomerProfile.MsSqlRepositories.Entities.LoginProviderEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnName("customer_id");

                    b.Property<int>("LoginProvider")
                        .HasColumnName("login_provider");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("login_providers");
                });

            modelBuilder.Entity("Lykke.Service.CustomerProfile.MsSqlRepositories.Entities.LoginProviderEntity", b =>
                {
                    b.HasOne("Lykke.Service.CustomerProfile.MsSqlRepositories.Entities.CustomerProfileEntity", "CustomerProfile")
                        .WithMany("LoginProviders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
